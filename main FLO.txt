package javaapplication1;
import java.io.IOException;
import java.util.Scanner;
import java.util.StringJoiner;
import  java.io.PrintWriter;
import java.io.BufferedReader;
import java.nio.file.Files;
import java.io.FileReader;
import java.nio.file.Paths;
import java.util.StringTokenizer;
public class JavaApplication1 {
   
    public static void main(String[] args) throws IOException {

              Scanner inpuut = new Scanner(System.in);
              int frames=0,numPage=0;
        
              int [] pages;
               int choose=0;
     int flag=0;
     String filePath;
      BufferedReader br = null;
        FileReader fr = null;
        pages=new int[numPage];
        
        
           System.out.print(" ***ENTER 1 for FIFO ***"+"\n  ***ENTER 2 for LRU: ***"+"\n ***ENTER 3 for Optimal ***\n");  
           choose=inpuut.nextInt();
           
           do {
           if(choose==1){
          
             break;

           }else if(choose==2){
            
           break;
           }else if(choose==3)
           { 
            break;
           }
           else if(choose !=0)
           {
                System.out.print(" *** YOU did NOT enter as the following  *** \n");
                System.out.print(" ***ENTER 1 for FIFO ***"+"\n ENTER 2 for LRU:\n"+"\n ENTER 3 for Optimal\n"+"***ENTER 0 TO EXIT***");  
               choose=inpuut.nextInt(); 
               //return;
           }
           }while(choose!=0);
           
           if(choose==0)
           {
               System.exit(0); 
           }

              System.out.print(" *** Please , Enter Frames number: *** \n"); //Ask user to enter numb of frames
              frames = inpuut.nextInt();
         do{
             if(frames<0){
              System.out.print(" *** The Frame cannot be NEGATIVE VALUE!! ***\n"+ "Enter Frame correctly:"); //Ask numb of pages
              frames = inpuut.nextInt(); 
             }
             if(frames>0 && flag!=1)
             {
               System.out.print(" *** Please , Enter pages: *** \n"); //Ask numb of pages
              numPage = inpuut.nextInt();
              flag=1;
             }
             
          if(numPage<0){
               System.out.print(" *** The Page number cannot be NEGATIVE VALUE!! ***"+"\n Enter pages correctly:"); //Ask numb of pages
               numPage = inpuut.nextInt();
                      }
         }while(numPage<0 || frames<0  );
         
             
               pages=new int[numPage];
               System.out.print(" *** Please , Enter page number: *** \n"); //Ask for page numb
             for(int j=0;j<numPage;j++)
             {
                      pages[j]=inpuut.nextInt();
                      
             if(pages[j]<0){
                      System.out.println(" *** you CAN'T enter a NEGATIVE PAGE NUMBER! ***"+ "\ntry again");
                           j--;
             }
             
             }
             
        switch (choose) {
            case 1:
                FIFO F = new FIFO();
                F.printFIFO( pages, numPage ,frames); //calling
                break;
            case 2:
                LRU L=new LRU();
                L.printLRU(pages, numPage ,frames);
                break;
            case 3:
                OPTIMAL O=new OPTIMAL();
                O.printOPTIMAL(pages, numPage ,frames);
                break;
            default:
                break;
        }
            
        
   }
    }
