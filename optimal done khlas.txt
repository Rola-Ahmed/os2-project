/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication1;

import java.io.IOException;

/**
 *
 * @author HP
 */
public class OPTIMAL {
 

 public void printOPTIMAL(int NumRefrence[], int pages, int fram) throws IOException {
     int interval[] = new int[25];
        int faults = 0;
        int frames[] = new int[25];
        int m, n, temp, flag, found;
        int position = 0, max, oldFrame = -1;
        int miss=0;

//        for (int j = 0; j < fram; j++) {
//            if (oldFrame == frames[j]) { //Repeated flag value = -1
//                flag = -1;
//                break;
//            }
        for (m = 0; m < fram; m++) {
            frames[m] = -1;
        }
        for (m = 0; m < pages; m++) {
            flag = 0;
            for (n = 0; n < fram; n++) {
                if (frames[n] == NumRefrence[m]) {
                    flag = 1;
                    System.out.print("\t");
                    break;
                }
            }
            if (flag == 0) {
                if (oldFrame == fram - 1) {
                    for (n = 0; n < fram; n++) {
                        for (temp = m + 1; temp < pages; temp++) {
                            interval[n] = 0;
                            if (frames[n] == NumRefrence[temp]) {
                                interval[n] = temp - m;
                                break;
                            }
                        }
                    }
                    found = 0;
                    for (n = 0; n < fram; n++) {
                        if (interval[n] == 0) {
                            position = n;
                            found = 1;
                            break;
                        }
                    }
                } else {
                    position = ++oldFrame;
                    found = 1;
                }
                if (found == 0) {
                    max = interval[0];
                    position = 0;
                    for (n = 1; n < fram; n++) {
                        if (max < interval[n]) {
                            max = interval[n];
                            position = n;
                        }
                    }
                }
                
               frames[position] = NumRefrence[m];
                //System.out.print("PAGE MISS" + " | " + "\n");
                faults++;
                
            }
      
            if(flag ==1) /// y3ni page it
            {    System.out.print("\n FRAMES:\t");
                for(int j=0;j<fram;j++){
                      System.out.print( frames[j] +"\t|\t");
                }
                      System.out.print("PAGE HIT"+" "+"\n");
                      
            }
            else
            {
                
                System.out.print("\n FRAMES:\t");
             for(int j=0;j<fram;j++){
System.out.print(frames[j]+"\t|\t");}
System.out.print("PAGE MISS"+ " "+"\n");
             
            }
                
           }
        System.out.println("\t Total Number of Page Faults: \t " + faults);

      
      
      
      
      
      
      
    /*   for (int i = 0; i < fram; i++)
        {
            temp[i]=-1;
            
        }
        
        for (int i = 0; i < fram; i++) {
            frame[i] = -1;
        }

        for (int i = 0; i < nums; i++) {
            flag1 = flag2 = 0;

            for (int j = 0; j < fram; j++) { //i check en l current value is not repeated in the frames 
                if (frame[j] == pages[i]) {
                    flag1 = flag2 = 1;
                    faults++;
                    break;
                }
            }
                                          
            if (flag1 == 0) {               //hyd5ol hena lama bas yeb2a l frames empty          
                for (int j = 0; j < fram; j++) {
                    if (frame[j] == -1) {
                        
                       // pageTable++;
                        frame[j] = pages[i];
                        flag2 = 1;                                
                        break;
                    }
                }
            }

            if (flag2 == 0) {            //law fih hit 
                flag3 = 0;

                for (int j = 0; j < fram; j++) {     //btcheck law l value is repeated
                   // temp[j] = -1;

                    for (int k = i + 1; k < nums; k++) {
                        if (frame[j] == pages[k]) {         //law l value is repeated 
                            temp[j] = k; 
                            hit++;
                            break;
                            
                        }
                    }
                }

                for (int j = 0; j < fram; j++) { 
                   // if (frame[j] == -1) {            //wrong l2no 
                       pos = j;
                      //  flag3 = 1;
                       // break;
                    //}
                }

                if (flag3 == 0) {
                    max = temp[0];
                   pos = 0;

                    for (int j = 1; j < fram;j++) {
                        if (temp[j] > max) {
                            max = temp[j];
                            pos = j;
                        }
                    }
                }

                frame[pos] = pages[i];
              //  faults++;
            }

            System.out.println(" ");

            for (int j = 0; j < fram; j++) {
                System.out.print(frame[j]);
            }
        }

        System.out.print("\n"+faults);
*/
    
    }
 
 
 
}

    

